[{"C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\App.js":"3","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\pages\\Home.js":"4","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\context\\auth.js":"5","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\components\\Nav.js":"6","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\pages\\auth\\Login.js":"7","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\pages\\auth\\Register.js":"8"},{"size":782,"mtime":1610701329422,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":934,"mtime":1610702127594,"results":"12","hashOfConfig":"10"},{"size":1801,"mtime":1610666439393,"results":"13","hashOfConfig":"10"},{"size":1712,"mtime":1610654160068,"results":"14","hashOfConfig":"10"},{"size":2413,"mtime":1610667457234,"results":"15","hashOfConfig":"10"},{"size":775,"mtime":1610662862141,"results":"16","hashOfConfig":"10"},{"size":917,"mtime":1610665079796,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hndkya",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},"C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\index.js",[],"C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\reportWebVitals.js",[],["38","39"],"C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\App.js",["40"],"C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\pages\\Home.js",["41","42","43","44"],"import { useQuery, gql, useLazyQuery } from \"@apollo/client\";\r\nimport { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Context\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nconst GET_ALL_POSTS = gql`\r\n  {\r\n    allPosts {\r\n      id\r\n      title\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  // Return all posts query\r\n  const { data, loading, error } = useQuery(GET_ALL_POSTS);\r\n\r\n  // access Context from value in AuthContext.provider\r\n  const { state, dispatch } = useContext(AuthContext);\r\n\r\n  // To avoid naming conflicts change variables name using :\r\n  const [\r\n    fetchPosts,\r\n    { data: posts, loading: loadingData, error: loadingError },\r\n  ] = useLazyQuery(GET_ALL_POSTS);\r\n\r\n  // HANDLE LOADING STATE\r\n  if (loading) return <p className=\"p-5\">Loading...</p>;\r\n\r\n  // HANDLE ERROR\r\n  if (error) return <p className=\"p-5\">Something is wrong...</p>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row p-5\">\r\n        {data.allPosts.map((p) => (\r\n          <div className=\"col-md-4\" key={p.id}>\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"card-title\">\r\n                  <h4>{p.title}</h4>\r\n                </div>\r\n                <p className=\"card-text\">{p.description}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"row p-5\">\r\n        <button\r\n          onClick={() => fetchPosts()}\r\n          className=\"btn-btn-raised btn-primary\"\r\n        >\r\n          Fetch posts\r\n        </button>\r\n      </div>\r\n      <hr />\r\n      {JSON.stringify(posts)}\r\n      <strong>{JSON.stringify(state.user)}</strong>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\context\\auth.js",[],"C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\components\\Nav.js",[],"C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\pages\\auth\\Login.js",["45"],"import { useState } from \"react\";\r\n\r\nconst handleSubmit = () => {};\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row p-5\">\r\n        <h4>Login</h4>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email Address</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Enter email\"\r\n              disabled={loading}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\user\\Desktop\\Web\\articleGram\\client\\src\\pages\\auth\\Register.js",["46"],"import { useState } from \"react\";\r\nimport \"../../css/register.scss\";\r\n\r\nconst handleSubmit = () => {};\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  return (\r\n    <div className=\" p-5 register text-center body\">\r\n      <h4>Register</h4>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Email Address</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button className=\"mt-4 box text-center\" disabled={!email || loading}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":10,"nodeType":"53","messageId":"54","endLine":12,"endColumn":22},{"ruleId":"51","severity":1,"message":"55","line":19,"column":9,"nodeType":"53","messageId":"54","endLine":19,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":24,"column":18,"nodeType":"53","messageId":"54","endLine":24,"endColumn":26},{"ruleId":"51","severity":1,"message":"57","line":29,"column":29,"nodeType":"53","messageId":"54","endLine":29,"endColumn":40},{"ruleId":"51","severity":1,"message":"58","line":29,"column":49,"nodeType":"53","messageId":"54","endLine":29,"endColumn":61},{"ruleId":"51","severity":1,"message":"59","line":7,"column":19,"nodeType":"53","messageId":"54","endLine":7,"endColumn":29},{"ruleId":"51","severity":1,"message":"59","line":8,"column":19,"nodeType":"53","messageId":"54","endLine":8,"endColumn":29},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'loadingData' is assigned a value but never used.","'loadingError' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]